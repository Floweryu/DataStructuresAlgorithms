***********************************
****非递归，please enter 'a'  *****
****递归，  please enter 'b'  *****
****退出，  please enter 'q'  *****
Please enter a char:      a
50
12586269025
The running time is:   0
Please enter a char:      b
50
12586269025
The running time is:   50.019
Please enter a char:      q
wrong!!!

--------------------------------
Process exited after 68.1 seconds with return value 0
请按任意键继续. . .

	在此程序中，我使用了#include<ctime>头文件，第一次使用了clock()函数来计算程序运行时间，我先说我在使用clock（）函数上的不足：
		由于实践太少，我在使用clock()函数时，当循环次数太少时输出是0，就是0秒；只有当循环次数大到一定程度时才会有非0时间显示，不过这不影响本题的分析。
	我们可以从输出开到，同一个输入值，在用递归和循环运行时的时间差别太大，在跑程序时可以深刻体会。运行循环程序几乎不要时间立即出结果，但运行递归时我等了好久，还以为是我程序有问题，输入值100时，等的时间太长了，我也不知道要等多久，所以输入了50，但还是等了好久。
	可以清楚的发现，循环比递归运行时间小太多了，差不多50多秒，我还不会查看存储空间使用情况，所以只能分析到这。